#!/bin/bash
install_pip_package() {
    local packages="$1"
    local extra_args="$2"
    
    if [ "$chip" = "arm64" ]; then
        arch -arm64 python"${python_ver}" -m pip install --user --trusted-host pypi.org --trusted-host pypi.python.org --trusted-host files.pythonhosted.org --default-timeout=100 --force-reinstall $extra_args $packages
    else
        #fallback for other architectures
        python"${python_ver}" -m pip install --user --trusted-host pypi.org --trusted-host pypi.python.org --trusted-host files.pythonhosted.org --default-timeout=100 --force-reinstall $extra_args $packages
    fi
}

upgrade_pip_tools() {
    if [ "$chip" = "arm64" ]; then
        arch -arm64 python"${python_ver}" -m pip install --upgrade pip setuptools wheel
    else
        python"${python_ver}" -m pip install --upgrade pip setuptools wheel
    fi
}

#get system information
chip=$(arch)
os_ver=$(sw_vers -productVersion)

#newline scroll
printf "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"

#check mac compatibility

if [ $chip = 'arm64' ]; then
	if echo -e "$os_ver \n12.99.99" | sort -V | tail -n1 | grep -Fq "12.99.99"; then
		printf "\033[31;1mYour mac is not compatible. It has to be Ventura or later. Consider updating it. \033[0m\n"
		exit 1
	fi
else 
	if echo -e "$os_ver \n10.12.0" | sort -V | tail -n1 | grep -Fq "10.12.0"; then
		printf "\033[31;1mYour mac is not compatible. It has to be 10.12 or later. Consider updating it. \033[0m\n"
		exit 1
	fi
fi

printf "\033[32;1mYour mac is compatible \033[0m\n\n\n"

#Check if python ver is installed

python_ver="3.8"
python_link="/www.python.org/ftp/python/3.8.0/python-3.8.0-macosx10.9.pkg"

filename=$(echo "${python_link}" | sed -e 's/\/.*\///g')

if python"${python_ver}" --version; then
	printf "\033[1;32mPython is already installed\033[0m\n"
else
	printf "\033[1;35mPython is not installed, installing python ${python_ver}\nThere should be a popup for the python installer.\n\033[0m"
	curl -O "https:/${python_link}" && open "${filename}"
	# Wait until python installation has finished.
	until $(python"${python_ver}" --version &> /dev/null); do
	  sleep 5;
	done
	#printf "\033[1;35mPress enter to continue when python is installed\033[0m"
	#read
fi

if xcode-select --print-path &> /dev/null; then
	printf "\033[1;32mCommand Line Tools are already installed.\033[0m\n"
else
	printf "\033[1;35mInstall Command Line Tools. There should be a pop-up; click the install button.\033[0m\n"
	xcode-select --install
	# Wait until XCode Command Line Tools installation has finished.
	until xcode-select --print-path &> /dev/null; do
	  sleep 5
	done
fi

#echo "Enter your password (the password used to log into the admin user). Note: the password is not visible"
#sudo xcode-select --switch /Library/Developer/CommandLineTools
printf "\033[1;35mInstalling rust\n\n\033[0m"
curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y
source "$HOME/.cargo/env"
printf "\033[1;35mMaking sure pip is installed\033[0m\n\n"
python"${python_ver}" -m ensurepip
python"${python_ver}" -m pip cache purge
upgrade_pip_tools

printf "\033[1;35mInstalling libraries\033[0m\n\n"

install_pip_package "opencv-python==4.4.0.46 opencv-contrib-python==4.4.0.46 numpy==1.19.1 Polygon3"
install_pip_package "paddleocr==2.6.1.3 scikit-image imgaug visualdl tritonclient" "--no-deps"
install_pip_package "paddlepaddle==2.5"
install_pip_package "pyobjc<11.0"
install_pip_package "python-rapidjson==1.10 pywavelets==1.1.1 imageio networkx packaging pillow tifffile scipy attrdict beautifulsoup4 cython"
install_pip_pacakge "fire fonttools lanms-neo==1.0.2 lmdb openpyxl premailer pyclipper python-docx rapidfuzz shapely tqdm greenlet pyautogui"
install_pip_package "pillow discord-webhook discord.py pynput matplotlib pymupdf bce-python-sdk flask flask-babel gradio"
install_pip_package "fuzzywuzzy python-Levenshtein pyscreeze eel ImageHash httpx pygetwindow aiohttp==3.10.5 pyobjc-framework-ColorSync"
install_pip_package "gevent" "--prefer-binary"
install_pip_package "pdf2docx<0.5.7" "--no-deps"
install_pip_package "urllib3"
install_pip_package "mss"
install_pip_package "lazy_loader"

printf "\n\n\n\033[32;1mInstallation complete!\nVisit the discord on instructions for settings and permissions \033[0m\n"
read
